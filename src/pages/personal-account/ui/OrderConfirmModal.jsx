import React from 'react';
import { getOrderStatusText, getCargoMarkText } from '../../../shared/lib/types/orders';

const OrderConfirmModal = ({ isOpen, onClose, onConfirm, action, order }) => {
  if (!isOpen || !order) return null;

  const formatDate = (dateString) => {
    if (!dateString) return '–ù–µ —É–∫–∞–∑–∞–Ω–∞';
    return new Date(dateString).toLocaleDateString('ru-RU', {
      day: '2-digit',
      month: '2-digit',
      year: 'numeric'
    });
  };

  const formatPrice = (price) => {
    if (!price) return '0';
    return parseFloat(price).toLocaleString('ru-RU') + ' ‚Ç∏';
  };

  const getActionConfig = () => {
    if (action === 'approve') {
      return {
        title: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∑–∞–∫–∞–∑',
        message: '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑?',
        description: '–ü–æ—Å–ª–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–º–æ–∂–µ—Ç –ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –æ–ø–ª–∞—Ç—É –∑–∞–∫–∞–∑–∞.',
        confirmText: '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å',
        confirmClass: 'bg-green-600 hover:bg-green-700',
        icon: '‚úì'
      };
    } else if (action === 'delete') {
      return {
        title: '–£–¥–∞–ª–∏—Ç—å –∑–∞–∫–∞–∑',
        message: '–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ—Ç –∑–∞–∫–∞–∑?',
        description: '–≠—Ç–æ –¥–µ–π—Å—Ç–≤–∏–µ –Ω–µ–ª—å–∑—è –æ—Ç–º–µ–Ω–∏—Ç—å. –ó–∞–∫–∞–∑ –±—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω –Ω–∞–≤—Å–µ–≥–¥–∞.',
        confirmText: '–£–¥–∞–ª–∏—Ç—å',
        confirmClass: 'bg-red-600 hover:bg-red-700',
        icon: 'üóëÔ∏è'
      };
    }
    return {};
  };

  const config = getActionConfig();

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-lg max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="px-6 py-4 border-b border-gray-200">
          <div className="flex items-center justify-between">
            <h2 className="text-xl font-semibold text-gray-900">
              {config.icon} {config.title}
            </h2>
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-gray-600 transition-colors"
            >
              <svg className="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M6 18L18 6M6 6l12 12" />
              </svg>
            </button>
          </div>
        </div>

        {/* –°–æ–¥–µ—Ä–∂–∏–º–æ–µ */}
        <div className="px-6 py-4">
          {/* –°–æ–æ–±—â–µ–Ω–∏–µ */}
          <div className="mb-4">
            <p className="text-lg text-gray-900 mb-2">{config.message}</p>
            <p className="text-sm text-gray-600">{config.description}</p>
          </div>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∑–∞–∫–∞–∑–µ */}
          <div className="bg-gray-50 rounded-lg p-4 mb-4">
            <h3 className="font-medium text-gray-900 mb-3">–î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞</h3>
            
            <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
              {/* –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
              <div className="space-y-2">
                <div className="flex justify-between">
                  <span className="text-sm text-gray-600">ID –∑–∞–∫–∞–∑–∞:</span>
                  <span className="text-sm font-medium">#{order.id}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-gray-600">–ö–ª–∏–µ–Ω—Ç:</span>
                  <span className="text-sm font-medium">{order.user?.name || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-gray-600">Email:</span>
                  <span className="text-sm">{order.user?.email || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-gray-600">–¢–µ–ª–µ—Ñ–æ–Ω:</span>
                  <span className="text-sm">{order.user?.phone || '–ù–µ —É–∫–∞–∑–∞–Ω'}</span>
                </div>
              </div>

              {/* –î–µ—Ç–∞–ª–∏ –∑–∞–∫–∞–∑–∞ */}
              <div className="space-y-2">
                <div className="flex justify-between">
                  <span className="text-sm text-gray-600">–•—Ä–∞–Ω–∏–ª–∏—â–µ:</span>
                  <span className="text-sm font-medium">{order.storage?.name || '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-gray-600">–û–±—ä–µ–º:</span>
                  <span className="text-sm">{order.total_volume} –º¬≥</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-gray-600">–°–æ–∑–¥–∞–Ω:</span>
                  <span className="text-sm">{formatDate(order.created_at)}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-gray-600">–°—Ç–æ–∏–º–æ—Å—Ç—å –∞—Ä–µ–Ω–¥—ã:</span>
                  <span className="text-sm font-medium text-[#273655]">{formatPrice(order.total_price)}</span>
                </div>
                <div className="flex justify-between">
                  <span className="text-sm text-gray-600">–î–µ–ø–æ–∑–∏—Ç:</span>
                  <span className="text-sm font-medium">15 000 ‚Ç∏</span>
                </div>
                <div className="flex justify-between pt-2 border-t border-gray-300">
                  <span className="text-sm text-gray-900 font-semibold">–û–±—â–∞—è —Å—É–º–º–∞:</span>
                  <span className="text-sm font-bold text-[#273655]">
                    {formatPrice((parseFloat(order.total_price) || 0) + 15000)}
                  </span>
                </div>
              </div>
            </div>

            {/* –°—Ç–∞—Ç—É—Å—ã */}
            <div className="mt-4 pt-4 border-t border-gray-200">
              <div className="flex gap-4">
                <span className={`px-2 py-1 rounded text-xs font-medium ${
                  order.status === 'INACTIVE' ? 'bg-red-100 text-red-700' :
                  order.status === 'APPROVED' ? 'bg-green-100 text-green-700' :
                  order.status === 'PROCESSING' ? 'bg-yellow-100 text-yellow-700' :
                  'bg-blue-100 text-blue-700'
                }`}>
                                     –°—Ç–∞—Ç—É—Å: {getOrderStatusText(order.status)}
                </span>
                <span className={`px-2 py-1 rounded text-xs font-medium ${
                  order.payment_status === 'PAID' ? 'bg-green-100 text-green-700' : 'bg-red-100 text-red-700'
                }`}>
                  –û–ø–ª–∞—Ç–∞: {order.payment_status === 'PAID' ? '–û–ø–ª–∞—á–µ–Ω–æ' : '–ù–µ –æ–ø–ª–∞—á–µ–Ω–æ'}
                </span>
                <span className={`px-2 py-1 rounded text-xs font-medium ${
                  order.contract_status === 'SIGNED' ? 'bg-green-100 text-green-700' : 'bg-orange-100 text-orange-700'
                }`}>
                  –î–æ–≥–æ–≤–æ—Ä: {order.contract_status === 'SIGNED' ? '–ü–æ–¥–ø–∏—Å–∞–Ω' : '–ù–µ –ø–æ–¥–ø–∏—Å–∞–Ω'}
                </span>
              </div>
            </div>

            {/* –ü—Ä–µ–¥–º–µ—Ç—ã */}
            {order.items && order.items.length > 0 && (
              <div className="mt-4 pt-4 border-t border-gray-200">
                <h4 className="text-sm font-medium text-gray-900 mb-2">
                  –ü—Ä–µ–¥–º–µ—Ç—ã –≤ –∑–∞–∫–∞–∑–µ ({order.items.length})
                </h4>
                <div className="space-y-1">
                  {order.items.slice(0, 3).map((item) => (
                                         <div key={item.id} className="text-xs text-gray-600">
                       {item.name} ‚Ä¢ {item.volume} –º¬≥ ‚Ä¢ {getCargoMarkText(item.cargo_mark)}
                     </div>
                  ))}
                  {order.items.length > 3 && (
                    <div className="text-xs text-gray-500">
                      –∏ –µ—â—ë {order.items.length - 3} –ø—Ä–µ–¥–º–µ—Ç–æ–≤...
                    </div>
                  )}
                </div>
              </div>
            )}
          </div>
        </div>

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="px-6 py-4 border-t border-gray-200 flex justify-end gap-3">
          <button
            onClick={onClose}
            className="px-4 py-2 border border-gray-300 rounded-lg text-gray-700 hover:bg-gray-50 transition-colors"
          >
            –û—Ç–º–µ–Ω–∞
          </button>
          <button
            onClick={onConfirm}
            className={`px-4 py-2 text-white rounded-lg transition-colors font-medium ${config.confirmClass}`}
          >
            {config.confirmText}
          </button>
        </div>
      </div>
    </div>
  );
};

export default OrderConfirmModal; 
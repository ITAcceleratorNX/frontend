import React, { useState, useEffect } from 'react';
import { paymentsApi } from '../api/paymentsApi';
import {
  Table,
  TableBody,
  TableCaption,
  TableCell,
  TableHead,
  TableHeader,
  TableRow,
} from '../../components/ui/table';

const MovingPricingTable = () => {
  const [prices, setPrices] = useState([]);
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchPrices = async () => {
      try {
        setIsLoading(true);
        setError(null);
        const data = await paymentsApi.getPrices();
        // –§–∏–ª—å—Ç—Ä—É–µ–º —Ç–æ–ª—å–∫–æ —ç–ª–µ–º–µ–Ω—Ç—ã —Å id >= 5
        const filteredPrices = data.filter(price => price.id >= 5);
        setPrices(filteredPrices);

        if (import.meta.env.DEV) {
          console.log('MovingPricingTable: –ó–∞–≥—Ä—É–∂–µ–Ω—ã —Ç–∞—Ä–∏—Ñ—ã —Å id >= 5:', filteredPrices);
        }
      } catch (error) {
        console.error('MovingPricingTable: –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ç–∞—Ä–∏—Ñ–æ–≤:', error);
        setError('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ç–∞—Ä–∏—Ñ—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.');
      } finally {
        setIsLoading(false);
      }
    };

    fetchPrices();
  }, []);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ —Ç–∏–ø–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–∏–π —è–∑—ã–∫
  const translateType = (type) => {
    const translations = {
      'LOADER': 'üí™ –ì—Ä—É–∑—á–∏–∫',
      'PACKER': 'üì¶ –£–ø–∞–∫–æ–≤—â–∏–∫',
      'FURNITURE_SPECIALIST': 'üîß –ú–µ–±–µ–ª—å—â–∏–∫',
      'GAZELLE': 'üöö –ì–∞–∑–µ–ª—å',
      'STRETCH_FILM': 'üé• –°—Ç—Ä–µ–π—á-–ø–ª—ë–Ω–∫–∞',
      'BOX_SIZE': 'üì¶ –ö–æ—Ä–æ–±–∫–∞',
      'MARKER': 'üñä –ú–∞—Ä–∫–µ—Ä',
      'UTILITY_KNIFE': 'üî™ –ö–∞–Ω—Ü–µ–ª—è—Ä—Å–∫–∏–π –Ω–æ–∂',
      'BUBBLE_WRAP_1': 'ü´ß –ü—É–∑—ã—Ä—á–∞—Ç–∞—è –ø–ª—ë–Ω–∫–∞ (10–º)',
      'BUBBLE_WRAP_2': 'ü´ß –ü—É–∑—ã—Ä—á–∞—Ç–∞—è –ø–ª—ë–Ω–∫–∞ (120–º)',
    };
    return translations[type] || type;
  };

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—ã
  const formatPrice = (price) => {
    return `${parseFloat(price).toLocaleString('ru-RU')} ‚Ç∏`;
  };

  const renderStatus = (message, spinner = false) => (
    <section className="w-full flex justify-center items-center mb-24 font-['Montserrat']">
      <div className="w-full max-w-[1100px] mx-auto px-4">
        <h2 className="text-[28px] md:text-[35px] font-bold text-[#1e2c4f] text-center mb-10">
          –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
        </h2>
        <div className="flex justify-center items-center py-12">
          {spinner ? (
            <>
              <div className="animate-spin rounded-full h-10 w-10 border-t-2 border-b-2 border-[#1e2c4f]"></div>
              <span className="ml-4 text-[#1e2c4f] text-base md:text-lg">–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤...</span>
            </>
          ) : (
            <div className="text-[#666] text-base md:text-lg">{message}</div>
          )}
        </div>
      </div>
    </section>
  );

  if (isLoading) return renderStatus('–ó–∞–≥—Ä—É–∑–∫–∞ —Ç–∞—Ä–∏—Ñ–æ–≤...', true);
  if (error) return renderStatus(error);
  if (prices.length === 0) return renderStatus('–¢–∞—Ä–∏—Ñ—ã –≤—Ä–µ–º–µ–Ω–Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã');

  return (
    <section className="w-full flex justify-center items-center mb-24 font-['Montserrat']">
      <div className="w-full max-w-[1100px] mx-auto px-4">
        <h2 className="text-[28px] md:text-[35px] font-bold text-[#1e2c4f] text-center mb-10">
          –¢–∞—Ä–∏—Ñ–Ω—ã–µ –ø–∞–∫–µ—Ç—ã
        </h2>
        
        <div className="bg-white rounded-xl shadow-lg border border-gray-200 overflow-hidden">
          <Table>
            <TableCaption className="text-[#666] text-sm mt-4">
              –ê–∫—Ç—É–∞–ª—å–Ω—ã–µ —Ç–∞—Ä–∏—Ñ—ã –Ω–∞ —É—Å–ª—É–≥–∏ –º—É–≤–∏–Ω–≥–∞
            </TableCaption>
            <TableHeader>
              <TableRow className="bg-[#f8f9fa]">
                <TableHead className="font-bold text-[#1e2c4f] text-base">
                  üìå –¢–∏–ø —É—Å–ª—É–≥–∏
                </TableHead>
                <TableHead className="font-bold text-[#1e2c4f] text-base">
                  üìù –û–ø–∏—Å–∞–Ω–∏–µ
                </TableHead>
                <TableHead className="font-bold text-[#1e2c4f] text-base text-right">
                  üí∞ –¶–µ–Ω–∞
                </TableHead>
              </TableRow>
            </TableHeader>
            <TableBody>
              {prices.map((priceItem) => (
                <TableRow key={priceItem.id} className="hover:bg-[#f8f9fa]/50">
                  <TableCell className="font-medium text-[#1e2c4f]">
                    {translateType(priceItem.type)}
                  </TableCell>
                  <TableCell className="text-[#666]">
                    {priceItem.description}
                  </TableCell>
                  <TableCell className="text-right font-bold text-[#1e2c4f]">
                    {formatPrice(priceItem.price)}
                  </TableCell>
                </TableRow>
              ))}
            </TableBody>
          </Table>
        </div>
      </div>
    </section>
  );
};

export default MovingPricingTable;